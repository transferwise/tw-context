
version: 2

references:
  container_config: &container_config
    docker:
      - image: arti.tw.ee/circle_openjdk11:latest
        user: circleci
    resource_class: medium
    environment:
      TERM: vt100
      GRADLE_OPTS: '-Dorg.gradle.console=plain'
  working_directory: &working_directory
    working_directory: ~/repo

jobs:
  build:
    <<: *working_directory
    <<: *container_config
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Assemble jar
          command: ./gradlew assemble --console=plain --no-daemon
      - run:
          name: Run tests
          command: ./gradlew check --console=plain --no-daemon --stacktrace
      - save_cache:
          paths:
            - ~/.gradle/
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_test_results:
          path: ./tw-context/build/test-results/
      - store_test_results:
          path: ./tw-context-starter/build/test-results/
      - store_test_results:
          path: ./tw-context-ownership-starter/build/test-results/
      - persist_to_workspace:
          root: .
          paths:
            - '*'
  artifacts-publish:
    <<: *working_directory
    <<: *container_config
    resource_class: small
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Configure git
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git config --global user.email "circleci@transferwise.com"
            git config --global user.name "tw-circleci"
      - run:
          name: Publish artifacts
          if ./.circleci/version-changed.sh tw-context-starter ; then
            ./gradlew pushTag publish --no-daemon --console=plain
          fi

workflows:
  version: 2
  build_and_publish:
    jobs:
      - build
      - artifacts-publish:
          context: artifactory-deploy
          requires:
            - build
          filters:
            branches:
              only:
                - master